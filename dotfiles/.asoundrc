# All application send to the dmix plugin, which sends to a loop, which creates two copies.
# One gets send to the card, the other one is available to the userspace for recording. 

# The sound card you use.
pcm.snd_card {
    type hw
    card 2
    device 0
}

# Default control.
# Alsamixer and such will use this.
ctl.!default {
    type hw
    card 2
}

# Where sound comes from.
pcm.desk_audio {
    type hw
    card "Loopback"
    device 1
    subdevice 0
    rate 48000
    channels 2
    format S16_LE
}

pcm.dmixed {
	type dmix
    ipc_key_add_uid true
	ipc_key 1024
    ipc_perm 0660
	ipc_gid audio
    slave.pcm "snd_card"
    slave {
        format S32_LE
        rate 48000
        period_time 0
    	period_size 512
        buffer_size 8192
        channels 2
    }
    bindings {
        0 0
        1 1
    }
}

pcm.loopmix {
	type dmix
    ipc_key_add_uid true
	ipc_key 1024
    ipc_perm 0660
	ipc_gid audio
	slave.pcm "hw:Loopback,0,0"
    slave {
        format S32_LE
        rate 48000
        period_time 0
    	period_size 512
        buffer_size 8192
        channels 2
    }
    bindings {
        0 0
        1 1
    }
}

# Multi, splitting onto usual card and loopback
pcm.looper {
    type plug
    slave.pcm {
        type multi
        slaves {
            a { channels 2 pcm "dmixed" }
            b { channels 2 pcm "loopmix" }
        }
        bindings {
            0 { slave a channel 0 }
            1 { slave a channel 1 }
            2 { slave b channel 0 }
            3 { slave b channel 1 }
        }
    }
    ttable [
        [ 1 0 1 0 ]   # left  -> a.left,  b.left
        [ 0 1 0 1 ]   # right -> a.right, b.right
    ]
}

pcm.!default {
    type asym
    playback.pcm "looper"
    capture.pcm "desk_audio"
}
